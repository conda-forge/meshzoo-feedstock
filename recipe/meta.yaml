{% set author = "nschloe" %}
{% set name = "meshzoo" %}
{% set version = "0.9.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/{{ author }}/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: 64c4f3b567d8f15c720696bac30e796e6eb2950c97fd1b2c542a239d88b17a11

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - python >=3.6
    - pip
  run:
    - python >=3.6
    - importlib_metadata
    - numpy

test:
  imports:
    - meshzoo
  requires:
    - pip
    - pytest
    - pytest-codeblocks
    - pytest-cov
    - matplotlib-base
  source_files:
    - README.md
    - tests
  commands:
    - "python -c \"from pathlib import Path; Path('matplotlibrc').write_text('backend: Template')\""
    - pip check
    - pytest --codeblocks README.md
    - pytest -s tests

about:
  home: https://github.com/{{ author }}/{{ name }}
  license: GPL-3.0-only
  license_family: GPL
  license_file: LICENSE.txt
  summary: Collection of explicitly constructed meshes
  description: |
    When generating meshes for FEM/FVM computations, sometimes your geometry is so simple that you don't need a complex mesh generator (like pygmsh, MeshPy, mshr, pygalmesh, dmsh), but something simple and fast that makes use of the structure of the domain. Enter meshzoo.
  doc_url: https://github.com/nschloe/meshzoo
  dev_url: https://github.com/nschloe/meshzoo

extra:
  recipe-maintainers:
    - lasergyro
